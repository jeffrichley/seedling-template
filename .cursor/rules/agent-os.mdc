---
alwaysApply: true
---
# Project Vine - Agent OS Documentation

## Product Context
- **Mission & Vision:** @.agent-os/product/mission.md
- **Technical Architecture:** @.agent-os/product/tech-stack.md
- **Development Roadmap:** @.agent-os/product/roadmap.md
- **Decision History:** @.agent-os/product/decisions.md

## Development Standards
- **Code Style:** @~/.agent-os/standards/code-style.md
- **Best Practices:** @~/.agent-os/standards/best-practices.md

## Project Management
- **Active Specs:** @.agent-os/specs/
- **Spec Planning:** Use `@~/.agent-os/instructions/create-spec.md`
- **Tasks Execution:** Use `@~/.agent-os/instructions/execute-tasks.md`

## Workflow Instructions

When asked to work on this codebase:

1. **First**, check @.agent-os/product/roadmap.md for current priorities
2. **Then**, follow the appropriate instruction file:
   - For new features: @.agent-os/instructions/create-spec.md
   - For tasks execution: @.agent-os/instructions/execute-tasks.md
3. **Always**, adhere to the standards in the files listed above

## Important Notes

- Product-specific files in `.agent-os/product/` override any global standards
- User's specific instructions override (or amend) instructions found in `.agent-os/specs/...`
- Always adhere to established patterns, code style, and best practices documented above.

## Project Vine Overview

Project Vine is a modular, agent-compatible, dual-mode video composition framework built on top of MoviePy. It provides an expressive and extensible API for AI-driven and human-assisted short-form video generation, supporting both scene-based narrative pacing and beat-driven precision editing.

### Key Features
- **Fluent API**: Intuitive method chaining for video composition
- **AI Integration**: JSON/YAML input for AI agent consumption
- **Dual-Mode Editing**: Scene-based and beat-driven editing modes
- **Extensible Architecture**: Registry-based system for custom effects
- **Type Safety**: Pydantic models with full validation
- **High Performance**: Optimized rendering pipeline

### Current Status
- **Phase**: Planning (Phase 1 starting)
- **Priority**: Foundation development (TimelineBuilder, Pydantic models, Registry system)
- **Timeline**: 6-week development roadmap

### Development Focus
- Core architecture and basic functionality
- Pydantic models and registry system
- Basic TimelineBuilder API
- Voice-image pair synchronization
