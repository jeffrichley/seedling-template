# Development shortcuts for {{ project_name }}
# Generated from the Seedling Copier template

# Run tests
test:
    uv run pytest tests

# Run specific test types
test-unit:
    uv run pytest tests/unit --cov=src --cov-report=term-missing

test-integration:
    uv run pytest tests/integration --cov=src --cov-report=term-missing

test-functional:
    uv run pytest tests/functional --cov=src --cov-report=term-missing

test-e2e:
    uv run pytest tests/e2e --cov=src --cov-report=term-missing

test-performance:
    uv run pytest tests/performance --cov=src --cov-report=term-missing

# Run linting
lint:
    nox -s lint

# Run type checking
type-check:
    nox -s type_check

# Build documentation
docs:
    nox -s docs

# Check documentation links
docs-linkcheck:
    nox -s docs_linkcheck

# Serve documentation with auto-reload (watches for changes)
docs-serve:
    uv run sphinx-autobuild docs/source docs/build/html --open-browser --port 8000 --watch src/{{ project_slug }}

# Generate API docs with pdoc (modern alternative)
docs-api:
    uv run pdoc --docformat google --output-dir docs/build/pdoc src/{{ project_slug }}

# Serve pdoc API docs
docs-api-serve:
    uv run pdoc --docformat google -h localhost -p 8001 src/{{ project_slug }}

# Quick docs development server (builds and serves with auto-reload)
docs-dev:
    uv run sphinx-autobuild docs/source docs/build/html --port 8000 --watch src/{{ project_slug }} --re-ignore ".*\\.pyc" --re-ignore "_build"

# Run all quality checks
quality: lint type-check docs-linkcheck

# Generate coverage report
coverage:
    nox -s coverage_html

# Run security audit
security:
    nox -s security

# Run complexity analysis
complexity:
    nox -s complexity

# Validate pyproject.toml
pyproject:
    nox -s pyproject

# Run pre-commit hooks
pre-commit:
    nox -s pre-commit

# Create a release PR
release:
    gh pr create --fill --title "chore: release"

# Install development dependencies
install:
    uv sync --all-extras

# Clean up generated files
clean:
    rm -rf .nox
    rm -rf htmlcov
    rm -rf docs/build
    rm -rf .pytest_cache
    rm -rf .mypy_cache
    rm -rf .ruff_cache

# Show help
default:
    @just --list
